// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentAdvisor.Data;

#nullable disable

namespace StudentAdvisor.Migrations.AppDbcontext2Migrations
{
    [DbContext(typeof(AppDbcontext2))]
    [Migration("20250308034045_Added advisors note")]
    partial class Addedadvisorsnote
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("StudentAdvisor.Models.AdvisorsNote", b =>
                {
                    b.Property<ushort>("AdvisorsNoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ushort>("AdvisorsNoteId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<ushort>("StudentId")
                        .HasColumnType("smallint unsigned");

                    b.HasKey("AdvisorsNoteId");

                    b.HasIndex("StudentId");

                    b.ToTable("AdvisorNotes", (string)null);
                });

            modelBuilder.Entity("StudentAdvisor.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("StudentAdvisor.Models.CourseGrade", b =>
                {
                    b.Property<ushort>("CourseGradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ushort>("CourseGradeId"));

                    b.Property<ushort>("CourseId")
                        .HasColumnType("smallint unsigned");

                    b.Property<int?>("CoursesCourseId")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("GradePoint")
                        .HasColumnType("double");

                    b.Property<ushort>("StudentId")
                        .HasColumnType("smallint unsigned");

                    b.HasKey("CourseGradeId");

                    b.HasIndex("CoursesCourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("CourseGrade", (string)null);
                });

            modelBuilder.Entity("StudentAdvisor.Models.CourseHistory", b =>
                {
                    b.Property<ushort>("CourseHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ushort>("CourseHistoryId"));

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<ushort>("StudentId")
                        .HasColumnType("smallint unsigned");

                    b.HasKey("CourseHistoryId");

                    b.HasIndex("StudentId");

                    b.ToTable("CourseHistory", (string)null);
                });

            modelBuilder.Entity("StudentAdvisor.Models.Student", b =>
                {
                    b.Property<ushort>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ushort>("StudentId"));

                    b.Property<string>("AcademicStanding")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CreditsCompleted")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("GPA")
                        .HasColumnType("double");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<ushort>("StudentProgramId")
                        .HasColumnType("smallint unsigned");

                    b.HasKey("StudentId");

                    b.HasIndex("StudentProgramId");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("StudentAdvisor.Models.StudentProgram", b =>
                {
                    b.Property<ushort>("StudentProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ushort>("StudentProgramId"));

                    b.Property<string>("programTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("StudentProgramId");

                    b.ToTable("StudentProgram", (string)null);
                });

            modelBuilder.Entity("StudentAdvisor.Models.AdvisorsNote", b =>
                {
                    b.HasOne("StudentAdvisor.Models.Student", "Students")
                        .WithMany("AdvisorsNotes")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Students");
                });

            modelBuilder.Entity("StudentAdvisor.Models.CourseGrade", b =>
                {
                    b.HasOne("StudentAdvisor.Models.Course", "Courses")
                        .WithMany("CourseGrades")
                        .HasForeignKey("CoursesCourseId");

                    b.HasOne("StudentAdvisor.Models.Student", "Students")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courses");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("StudentAdvisor.Models.CourseHistory", b =>
                {
                    b.HasOne("StudentAdvisor.Models.Student", "Students")
                        .WithMany("CourseHistories")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Students");
                });

            modelBuilder.Entity("StudentAdvisor.Models.Student", b =>
                {
                    b.HasOne("StudentAdvisor.Models.StudentProgram", "StudentPrograms")
                        .WithMany("Students")
                        .HasForeignKey("StudentProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentPrograms");
                });

            modelBuilder.Entity("StudentAdvisor.Models.Course", b =>
                {
                    b.Navigation("CourseGrades");
                });

            modelBuilder.Entity("StudentAdvisor.Models.Student", b =>
                {
                    b.Navigation("AdvisorsNotes");

                    b.Navigation("CourseHistories");
                });

            modelBuilder.Entity("StudentAdvisor.Models.StudentProgram", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
